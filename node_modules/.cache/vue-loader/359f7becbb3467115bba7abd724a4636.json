{"remainingRequest":"/home/dani/Escritorio/vue-firebase/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dani/Escritorio/vue-firebase/src/views/usuario/Registro.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/dani/Escritorio/vue-firebase/src/views/usuario/Registro.vue","mtime":1552655634179},{"path":"/home/dani/Escritorio/vue-firebase/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dani/Escritorio/vue-firebase/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/dani/Escritorio/vue-firebase/node_modules/vuetify-loader/lib/loader.js","mtime":1549812933000},{"path":"/home/dani/Escritorio/vue-firebase/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dani/Escritorio/vue-firebase/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { required, email, minLength, maxLength, sameAs } from 'vuelidate/lib/validators'\nimport { nombreCompuesto } from '@/utils/validaciones'\nimport { mapMutations, mapGetters } from 'vuex'\nimport { auth } from '@/firebase'\n\nexport default {\n  data() {\n    return {\n      vista: 1,\n      f1: {\n        email: '',\n        password: '',\n        repetirPassword: ''\n      },\n      f2: {\n        nombres: '',\n        apellidos: ''\n      },\n      fechaNacimiento: null,\n      fechaMaxima: null\n    }\n  },\n  validations: {\n    f1: {\n      email: {\n        required,\n        email\n      },\n      password: {\n        required,\n        minLength: minLength(6),\n        maxLength: maxLength(20)\n      },\n      repetirPassword: {\n        sameAs: sameAs('password')\n      }\n    },\n    f2: {\n      nombres: {\n        required,\n        minLength: minLength(3),\n        maxLength: maxLength(20),\n        nombreCompuesto\n      },\n      apellidos: {\n        required,\n        minLength: minLength(3),\n        maxLength: maxLength(20),\n        nombreCompuesto\n      }\n    },\n    fechaNacimiento: {\n      required\n    }\n  },\n  created() {\n    let fechaActual = new Date()\n    this.fechaMaxima = new Date(fechaActual.setFullYear(fechaActual.getFullYear() - 13))\n      .toISOString()\n      .substr(0, 10)\n  },\n  methods: {\n    ...mapMutations(['mostrarOcupado', 'ocultarOcupado', 'mostrarExito', 'mostrarError', 'mostrarAdvertencia']),\n    ...mapMutations('sesion', ['actualizarUsuario']),\n    siguiente(vista) {\n      switch (vista) {\n        case 1:\n          if (this.$v.f1.$invalid) {\n            this.$v.f1.$touch()\n            return\n          }\n          else {\n            this.vista++\n          }\n          break\n        case 2:\n          if (this.$v.f2.$invalid) {\n            this.$v.f2.$touch()\n            return\n          }\n          else {\n            this.vista++\n          }\n          break\n      }\n    },\n    async registrar() {\n      if (this.$v.fechaNacimiento.$invalid) { return }\n\n      try {\n        this.mostrarOcupado({ titulo: 'Creando Registro', mensaje: 'Estamos registrando tu información...' })\n\n        let cred = await auth.createUserWithEmailAndPassword(this.f1.email, this.f1.password)\n        let uid = cred.user.uid\n\n        let usuario = {\n          uid,\n          userName: 'newton',\n          nombres: this.f2.nombres,\n          apellidos: this.f2.apellidos,\n          sexo: 'M',\n          descripcion: 'Descripción',\n          biografia: 'https://es.wikipedia.org/wiki/Isaac_Newton',\n          fotoPerfil: 'https://upload.wikimedia.org/wikipedia/commons/thumb/8/83/Sir_Isaac_Newton_%281643-1727%29.jpg/220px-Sir_Isaac_Newton_%281643-1727%29.jpg'\n        }\n\n        this.ocultarOcupado()\n        this.actualizarUsuario(usuario)\n        this.mostrarExito(this.saludo)\n        this.$router.push( { name: 'home' } )\n      }\n      catch (error) {\n        this.ocultarOcupado()\n\n        switch(error.code) {\n          case 'auth/email-already-in-use':\n            this.mostrarAdvertencia('Ya se ha registrado esta dirección de email')\n            break\n          default:\n            this.mostrarError('Ocurrió un error registrando tu cuenta. Inténtalo más tarde.')\n            break\n        }\n        \n      }\n    },\n    enter() {\n      if (this.vista == 3 && !this.fechaNacimiento) {\n        this.$refs.calendario.activePicker = 'YEAR'\n      }\n    }\n  },\n  computed: {\n    ...mapGetters('sesion', ['saludo']),\n    erroresEmail() {\n      let errores = []\n      if (!this.$v.f1.email.$dirty) { return errores }\n      if (!this.$v.f1.email.required) { errores.push('Ingresa tu email.') }\n      if (!this.$v.f1.email.email) { errores.push('Ingresa un email válido.') }\n      return errores\n    },\n    erroresPassword() {\n      let errores = []\n      if (!this.$v.f1.password.$dirty) { return errores }\n      if (!this.$v.f1.password.required) { errores.push('Ingresa tu password.') }\n      if (!this.$v.f1.password.minLength) { errores.push('Ingresa al menos 6 caracteres.') }\n      if (!this.$v.f1.password.maxLength) { errores.push('Ingresa máximo 20 caracteres.') }\n      return errores\n    },\n    erroresRepetirPassword() {\n      let errores = []\n      if (!this.$v.f1.repetirPassword.$dirty) { return errores }\n      if (!this.$v.f1.repetirPassword.sameAs) { errores.push('Las contraseñas no coinciden.') }\n      return errores\n    },\n    erroresNombres() {\n      let errores = []\n      if (!this.$v.f2.nombres.$dirty) { return errores }\n      if (!this.$v.f2.nombres.required) { errores.push('Ingresa tu nombre.') }\n      if (!this.$v.f2.nombres.minLength) { errores.push('Ingresa al menos 3 caracteres.') }\n      if (!this.$v.f2.nombres.maxLength) { errores.push('Ingresa máximo 20 caracteres.') }\n      if (!this.$v.f2.nombres.nombreCompuesto) { errores.push('Ingresa un nombre válido.') }\n      return errores\n    },\n    erroresApellidos() {\n      let errores = []\n      if (!this.$v.f2.apellidos.$dirty) { return errores }\n      if (!this.$v.f2.apellidos.required) { errores.push('Ingresa tus apellidos.') }\n      if (!this.$v.f2.apellidos.minLength) { errores.push('Ingresa al menos 3 caracteres.') }\n      if (!this.$v.f2.apellidos.maxLength) { errores.push('Ingresa máximo 20 caracteres.') }\n      if (!this.$v.f2.apellidos.nombreCompuesto) { errores.push('Ingresa un apellido válido.') }\n      return errores\n    }\n  }\n}\n",{"version":3,"sources":["Registro.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmfile":"Registro.vue","sourceRoot":"src/views/usuario","sourcesContent":["<template>\n  <v-layout justify-center align-center>\n    <v-flex xs12 sm8 md6 lg5 xl4>\n      <v-slide-y-transition mode=\"out-in\" @enter=\"enter\">\n        <v-card v-if=\"vista == 1\" :key=\"1\" class=\"elevation-6\">\n          <v-toolbar color=\"primary\" dark card>\n            <v-toolbar-title>\n              Regístrate\n            </v-toolbar-title>\n          </v-toolbar>\n          <v-card-text>\n            <v-text-field @blur=\"$v.f1.email.$touch()\" :error-messages=\"erroresEmail\" v-model=\"f1.email\" label=\"Email\"></v-text-field>\n            <v-text-field @blur=\"$v.f1.password.$touch()\" :error-messages=\"erroresPassword\" v-model=\"f1.password\" label=\"Password\" type=\"password\"></v-text-field>\n            <v-text-field @keyup.enter=\"siguiente(1)\" @blur=\"$v.f1.repetirPassword.$touch()\" :error-messages=\"erroresRepetirPassword\" v-model=\"f1.repetirPassword\" label=\"Repetir Password\" type=\"password\"></v-text-field>\n          </v-card-text>\n          <v-card-text>\n            <v-layout justify-end>\n              <v-btn :depressed=\"$v.f1.$invalid\" :disabled=\"$v.f1.$invalid\" @click=\"siguiente(1)\" color=\"secondary\">Siguiente</v-btn>\n            </v-layout>\n          </v-card-text>\n          <v-card-actions>\n            <v-btn :to=\"{ name: 'login' }\" flat color=\"secondary\">\n              ¿Ya tienes cuenta? Ingresa.\n            </v-btn>\n          </v-card-actions>\n        </v-card>\n        <v-card v-if=\"vista == 2\" :key=\"2\" class=\"elevation-6\">\n          <v-toolbar color=\"primary\" dark card>\n            <v-toolbar-title>\n              Ingresa tus Nombres y Apellidos\n            </v-toolbar-title>\n          </v-toolbar>\n          <v-card-text>\n            <v-text-field @blur=\"$v.f2.nombres.$touch()\" autofocus :error-messages=\"erroresNombres\" v-model=\"f2.nombres\" label=\"Nombres\"></v-text-field>\n            <v-text-field @keyup.enter=\"siguiente(2)\" @blur=\"$v.f2.apellidos.$touch()\" :error-messages=\"erroresApellidos\" v-model=\"f2.apellidos\" label=\"Apellidos\"></v-text-field>\n          </v-card-text>\n          <v-card-text>\n            <v-layout>\n              <v-flex xs6>\n                <v-layout justify-start>\n                  <v-btn @click=\"vista--\">Atrás</v-btn>\n                </v-layout>\n              </v-flex>\n              <v-flex xs6>\n                <v-layout justify-end>\n                  <v-btn @click=\"siguiente(2)\" :depressed=\"$v.f2.$invalid\" :disabled=\"$v.f2.$invalid\" color=\"secondary\">Siguiente</v-btn>\n                </v-layout>\n              </v-flex>\n            </v-layout>\n          </v-card-text>\n        </v-card>\n        <v-card v-if=\"vista == 3\" :key=\"3\" class=\"elevation-6\">\n          <v-toolbar color=\"primary\" dark card>\n            <v-toolbar-title>\n              Selecciona tu Fecha de Nacimiento\n            </v-toolbar-title>\n          </v-toolbar>\n          <v-card-text>\n            <v-layout justify-center>\n              <v-date-picker ref=\"calendario\" :max=\"fechaMaxima\" v-model=\"fechaNacimiento\" reactive locale=\"es-co\" class=\"elevation-3\"></v-date-picker>\n            </v-layout>\n          </v-card-text>\n          <v-card-text>\n            <v-layout>\n              <v-flex xs6>\n                <v-layout justify-start>\n                  <v-btn @click=\"vista--\">Atrás</v-btn>\n                </v-layout>\n              </v-flex>\n              <v-flex xs6>\n                <v-layout justify-end>\n                  <v-btn @click=\"registrar\" :depressed=\"$v.fechaNacimiento.$invalid\" :disabled=\"$v.fechaNacimiento.$invalid\" color=\"secondary\">Registrarse</v-btn>\n                </v-layout>\n              </v-flex>\n            </v-layout>\n          </v-card-text>\n        </v-card>\n      </v-slide-y-transition>\n    </v-flex>\n  </v-layout>\n</template>\n\n<script>\nimport { required, email, minLength, maxLength, sameAs } from 'vuelidate/lib/validators'\nimport { nombreCompuesto } from '@/utils/validaciones'\nimport { mapMutations, mapGetters } from 'vuex'\nimport { auth } from '@/firebase'\n\nexport default {\n  data() {\n    return {\n      vista: 1,\n      f1: {\n        email: '',\n        password: '',\n        repetirPassword: ''\n      },\n      f2: {\n        nombres: '',\n        apellidos: ''\n      },\n      fechaNacimiento: null,\n      fechaMaxima: null\n    }\n  },\n  validations: {\n    f1: {\n      email: {\n        required,\n        email\n      },\n      password: {\n        required,\n        minLength: minLength(6),\n        maxLength: maxLength(20)\n      },\n      repetirPassword: {\n        sameAs: sameAs('password')\n      }\n    },\n    f2: {\n      nombres: {\n        required,\n        minLength: minLength(3),\n        maxLength: maxLength(20),\n        nombreCompuesto\n      },\n      apellidos: {\n        required,\n        minLength: minLength(3),\n        maxLength: maxLength(20),\n        nombreCompuesto\n      }\n    },\n    fechaNacimiento: {\n      required\n    }\n  },\n  created() {\n    let fechaActual = new Date()\n    this.fechaMaxima = new Date(fechaActual.setFullYear(fechaActual.getFullYear() - 13))\n      .toISOString()\n      .substr(0, 10)\n  },\n  methods: {\n    ...mapMutations(['mostrarOcupado', 'ocultarOcupado', 'mostrarExito', 'mostrarError', 'mostrarAdvertencia']),\n    ...mapMutations('sesion', ['actualizarUsuario']),\n    siguiente(vista) {\n      switch (vista) {\n        case 1:\n          if (this.$v.f1.$invalid) {\n            this.$v.f1.$touch()\n            return\n          }\n          else {\n            this.vista++\n          }\n          break\n        case 2:\n          if (this.$v.f2.$invalid) {\n            this.$v.f2.$touch()\n            return\n          }\n          else {\n            this.vista++\n          }\n          break\n      }\n    },\n    async registrar() {\n      if (this.$v.fechaNacimiento.$invalid) { return }\n\n      try {\n        this.mostrarOcupado({ titulo: 'Creando Registro', mensaje: 'Estamos registrando tu información...' })\n\n        let cred = await auth.createUserWithEmailAndPassword(this.f1.email, this.f1.password)\n        let uid = cred.user.uid\n\n        let usuario = {\n          uid,\n          userName: 'newton',\n          nombres: this.f2.nombres,\n          apellidos: this.f2.apellidos,\n          sexo: 'M',\n          descripcion: 'Descripción',\n          biografia: 'https://es.wikipedia.org/wiki/Isaac_Newton',\n          fotoPerfil: 'https://upload.wikimedia.org/wikipedia/commons/thumb/8/83/Sir_Isaac_Newton_%281643-1727%29.jpg/220px-Sir_Isaac_Newton_%281643-1727%29.jpg'\n        }\n\n        this.ocultarOcupado()\n        this.actualizarUsuario(usuario)\n        this.mostrarExito(this.saludo)\n        this.$router.push( { name: 'home' } )\n      }\n      catch (error) {\n        this.ocultarOcupado()\n\n        switch(error.code) {\n          case 'auth/email-already-in-use':\n            this.mostrarAdvertencia('Ya se ha registrado esta dirección de email')\n            break\n          default:\n            this.mostrarError('Ocurrió un error registrando tu cuenta. Inténtalo más tarde.')\n            break\n        }\n        \n      }\n    },\n    enter() {\n      if (this.vista == 3 && !this.fechaNacimiento) {\n        this.$refs.calendario.activePicker = 'YEAR'\n      }\n    }\n  },\n  computed: {\n    ...mapGetters('sesion', ['saludo']),\n    erroresEmail() {\n      let errores = []\n      if (!this.$v.f1.email.$dirty) { return errores }\n      if (!this.$v.f1.email.required) { errores.push('Ingresa tu email.') }\n      if (!this.$v.f1.email.email) { errores.push('Ingresa un email válido.') }\n      return errores\n    },\n    erroresPassword() {\n      let errores = []\n      if (!this.$v.f1.password.$dirty) { return errores }\n      if (!this.$v.f1.password.required) { errores.push('Ingresa tu password.') }\n      if (!this.$v.f1.password.minLength) { errores.push('Ingresa al menos 6 caracteres.') }\n      if (!this.$v.f1.password.maxLength) { errores.push('Ingresa máximo 20 caracteres.') }\n      return errores\n    },\n    erroresRepetirPassword() {\n      let errores = []\n      if (!this.$v.f1.repetirPassword.$dirty) { return errores }\n      if (!this.$v.f1.repetirPassword.sameAs) { errores.push('Las contraseñas no coinciden.') }\n      return errores\n    },\n    erroresNombres() {\n      let errores = []\n      if (!this.$v.f2.nombres.$dirty) { return errores }\n      if (!this.$v.f2.nombres.required) { errores.push('Ingresa tu nombre.') }\n      if (!this.$v.f2.nombres.minLength) { errores.push('Ingresa al menos 3 caracteres.') }\n      if (!this.$v.f2.nombres.maxLength) { errores.push('Ingresa máximo 20 caracteres.') }\n      if (!this.$v.f2.nombres.nombreCompuesto) { errores.push('Ingresa un nombre válido.') }\n      return errores\n    },\n    erroresApellidos() {\n      let errores = []\n      if (!this.$v.f2.apellidos.$dirty) { return errores }\n      if (!this.$v.f2.apellidos.required) { errores.push('Ingresa tus apellidos.') }\n      if (!this.$v.f2.apellidos.minLength) { errores.push('Ingresa al menos 3 caracteres.') }\n      if (!this.$v.f2.apellidos.maxLength) { errores.push('Ingresa máximo 20 caracteres.') }\n      if (!this.$v.f2.apellidos.nombreCompuesto) { errores.push('Ingresa un apellido válido.') }\n      return errores\n    }\n  }\n}\n</script>\n"]}]}